@model IEnumerable<OpenIdDictMvcLib.Dto.OpenIddictTokenDto>
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@using Microsoft.AspNetCore.Localization;
@using OpenIdDictMvcLib.Dto;
@using OpenIdDictMvcLib.Localizers;

@inject IHtmlLocalizer<OpenIddictTokenLocalizerResource> SharedLocalizer
@{

    string IdType = ViewBag.IdType ?? "";
    if (IdType == "app") ViewData["Title"] = @SharedLocalizer["Application Tokens"]; else ViewData["Title"] = SharedLocalizer["Authorization Tokens"];
    string PrntId = (ViewBag.PrntId ?? "").Trim();
    string AppId = ViewBag.AppId ?? "";
    PageDto pager = ViewBag.Pager as PageDto ?? new PageDto() { PrintFrom = 1, PrintTo = 0 };
}

@if ((IdType == "auth") && (!string.IsNullOrEmpty(PrntId)))
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">@SharedLocalizer["Home"]</a></li>
            <li class="breadcrumb-item"><a asp-controller="OpenIddictApps" asp-action="Index">@SharedLocalizer["Applications"]</a></li>
            <li class="breadcrumb-item"><a asp-controller="OpenIddictAuthorizations" asp-action="Index" asp-route-appid="@AppId">@SharedLocalizer["Authorizations"]</a></li>
            <li class="breadcrumb-item active" aria-current="page">@SharedLocalizer["Authorization Tokens"]</li>
        </ol>
    </nav>
    <h1>@SharedLocalizer["Authorization Tokens"]</h1>
}
else if ((IdType == "app") && (!string.IsNullOrEmpty(PrntId)))
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">@SharedLocalizer["Home"]</a></li>
            <li class="breadcrumb-item"><a asp-controller="OpenIddictApps" asp-action="Index">@SharedLocalizer["Applications"]</a></li>
            <li class="breadcrumb-item active" aria-current="page">@SharedLocalizer["Application Tokens"]</li>
        </ol>
    </nav>
    <h1>@SharedLocalizer["Application Tokens"]</h1>
}


<div class="table-responsive text-nowrap" style="overflow-x: visible; overflow-y: visible;">
    <table class="table table-sm">
    <thead>
        <tr>
            <th>
            </th>
@*
            <th>
                @Html.DisplayNameFor(model => model.ApplicationId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AuthorizationId)
            </th>
*@
            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpirationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RedemptionDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReferenceId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TokenType)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <div class="dropdown" >
                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-action="Details" asp-route-idtype="@IdType" asp-route-prntid="@PrntId" asp-route-tokenid="@item.TokenId">@SharedLocalizer["Details"]</a></li>
                        <li><a class="dropdown-item" asp-action="Delete" asp-route-idtype="@IdType" asp-route-prntid="@PrntId" asp-route-tokenid="@item.TokenId">@SharedLocalizer["Delete"]</a></li>
                    </ul>
                </div>
            </td>
@*
            <td>
                @Html.DisplayFor(modelItem => item.ApplicationId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorizationId)
            </td>
*@
            <td>
                @Html.DisplayFor(modelItem => item.CreationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpirationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RedemptionDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReferenceId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TokenType)
            </td>
        </tr>
}
    </tbody>
</table>
</div>


<nav aria-label="Page navigation">
    <ul class="pagination flex-wrap">
        <li class="page-item @(pager.CurrentPage > 1 ? " " : " disabled" )">
            <a asp-route-currpg="1" asp-route-idtype="@IdType" asp-route-prntid="@PrntId"
               class="page-link" aria-label="Frist">
                <span aria-hidden="true">|<</span>
            </a>
        </li>
        <li class="page-item @(pager.CurrentPage > 1 ? " " : " disabled" )">
            <a asp-route-currpg="@(pager.CurrentPage - 1)" asp-route-idtype="@IdType" asp-route-prntid="@PrntId"
               class="page-link" aria-label="Previous">
                <span aria-hidden="true"><</span>

            </a>
        </li>
        @for (var i = pager.PrintFrom; i <= pager.PrintTo; i++)
        {
            <li class="page-item @(i == pager.CurrentPage ? "active disabled" : "")">
                <a asp-route-currpg="@i" asp-route-idtype="@IdType" asp-route-prntid="@PrntId"
                   class="page-link">@i</a>
            </li>
        }
        <li class="page-item @(pager.CurrentPage < pager.PageCount ? " " : " disabled" )">
            <a asp-route-currpg="@(pager.CurrentPage + 1)" asp-route-idtype="@IdType" asp-route-prntid="@PrntId"
               class="page-link" aria-label="Next">
                <span aria-hidden="true">></span>

            </a>
        </li>
        <li class="page-item @(pager.CurrentPage < pager.PageCount ? " " : " disabled" )">
            <a asp-route-currpg="@pager.PageCount" asp-route-idtype="@IdType" asp-route-prntid="@PrntId"
               class="page-link" aria-label="Last">
                <span aria-hidden="true">>|</span>
            </a>
        </li>
    </ul>
</nav>
