@model IEnumerable<OpenIdDictMvcLib.Dto.OidcGroupDto>
﻿@using OpenIdDictMvcLib.Dto
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@using Microsoft.AspNetCore.Localization;
@using OpenIdDictMvcLib.Localizers;
@inject IHtmlLocalizer<OidcGroupLocalizerResource> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["User groups"];
    PageDto pager = ViewBag.Pager as PageDto ?? new PageDto() { PrintFrom = 1, PrintTo = 0 };
    string searchstr = ViewBag.SearchString;
    if (searchstr == null) searchstr = ""; // prepare for Uri.EscapeDataString
    string searchbyid = ViewBag.SearchById;
    if (searchbyid == null) searchbyid = "0";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">@SharedLocalizer["Home"]</a></li>
        <li class="breadcrumb-item active" aria-current="page">@SharedLocalizer["User groups"]</li>
    </ol>
</nav>



<h1>@SharedLocalizer["User groups"]</h1>

@using (Html.BeginForm(FormMethod.Get))
{
    <div class="row g-3">
        <div class="col-auto form-group">
            @Html.DropDownList("searchby", ViewBag.SearchBy as List<SelectListItem>, htmlAttributes: new { @class = "form-control-sm" })
        </div>
        <div class="col-auto form-group">
            @Html.TextBox("searchstr", searchstr, null, htmlAttributes: new { @class = "form-control-sm" })
        </div>
        <div class="col-auto form-group">
            <input type="submit" value="@SharedLocalizer["Search"]" class="btn btn-info btn-sm" />
        </div>
    </div>
}


<table class="table table-sm">
    <thead>
        <tr>
            <th>
                <a class="btn btn-primary btn-sm" asp-action="Create">@SharedLocalizer["Create New"]</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OidcGroupId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OidcGroupName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OidcGroupDisplayName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" asp-action="Edit" asp-route-oidcgroupid="@item.OidcGroupId">@SharedLocalizer["Edit"]</a></li>
                            <li><a class="dropdown-item" asp-action="Details" asp-route-oidcgroupid="@item.OidcGroupId">@SharedLocalizer["Details"]</a></li>
                            <li><a class="dropdown-item" asp-action="Delete" asp-route-oidcgroupid="@item.OidcGroupId">@SharedLocalizer["Delete"]</a></li>
                            <li><a class="dropdown-item" asp-controller="OidcScope" asp-action="Index" asp-route-idtype="group" asp-route-prntid="@item.OidcGroupId">@SharedLocalizer["Groups Scopes"]</a></li>
                        </ul>
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OidcGroupId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OidcGroupName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OidcGroupDisplayName)
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination flex-wrap">
        <li class="page-item @(pager.CurrentPage > 1 ? " " : " disabled" )">
            <a asp-route-currpg="1" asp-route-searchby="@searchbyid" asp-route-searchstr="@Uri.EscapeDataString(searchstr)"
               class="page-link" aria-label="Frist">
                <span aria-hidden="true">|<</span>

            </a>
        </li>
        <li class="page-item @(pager.CurrentPage > 1 ? " " : " disabled" )">
            <a asp-route-currpg="@(pager.CurrentPage - 1)" asp-route-searchby="@searchbyid" asp-route-searchstr="@Uri.EscapeDataString(searchstr)"
               class="page-link" aria-label="Previous">
                <span aria-hidden="true"><</span>

            </a>
        </li>
        @for (var i = pager.PrintFrom; i <= pager.PrintTo; i++)
        {
            <li class="page-item @(i == pager.CurrentPage ? "active disabled" : "")">
                <a asp-route-currpg="@i" asp-route-searchby="@searchbyid" asp-route-searchstr="@Uri.EscapeDataString(searchstr)"
                   class="page-link">@i</a>
            </li>
        }
        <li class="page-item @(pager.CurrentPage < pager.PageCount ? " " : " disabled" )">
            <a asp-route-currpg="@(pager.CurrentPage + 1)" asp-route-searchby="@searchbyid" asp-route-searchstr="@Uri.EscapeDataString(searchstr)"
               class="page-link" aria-label="Next">
                <span aria-hidden="true">></span>

            </a>
        </li>
        <li class="page-item @(pager.CurrentPage < pager.PageCount ? " " : " disabled" )">
            <a asp-route-currpg="@pager.PageCount" asp-route-searchby="@searchbyid" asp-route-searchstr="@Uri.EscapeDataString(searchstr)"
               class="page-link" aria-label="Last">
                <span aria-hidden="true">>|</span>

            </a>
        </li>
    </ul>
</nav>
