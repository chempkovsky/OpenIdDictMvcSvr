==1==
read the article first
https://learn.microsoft.com/en-us/aspnet/core/security/authentication/accconfirm?view=aspnetcore-3.1&tabs=visual-studio
==2==
read the article at second
https://metanit.com/sharp/aspnet5/16.5.php
==3==
read the article at third
https://medium.com/@MisterKevin_js/enabling-email-verification-in-asp-net-core-identity-ui-2-1-b87f028a97e0
https://kenhaggerty.com/articles/article/aspnet-core-22-smtp-emailsender-implementation

==3==
read the article at third
Add the MailKit Library
https://code-maze.com/aspnetcore-send-email/
https://learn.microsoft.com/en-us/dotnet/api/system.net.mail.smtpclient?view=net-7.0
```````````````````````````````
We don't recommend that you use the SmtpClient class for new development because SmtpClient doesn't support many modern protocols. 
Use MailKit or other libraries instead. For more information, see SmtpClient shouldn't be used on GitHub.
```````````````````````````````

==4==
Install NETCore.MailKit
------------------------------------------
https://www.nuget.org/packages/MailKit/4.1.0
http://www.mimekit.net/
<PackageReference Include="MailKit" Version="4.1.0" />
------------------------------------------

==5==
Add the following section into appsettings.json
------------------------------------------
"SMTP":
{
    "Host": "smtp.ethereal.email",
    "Port": 587,
    "UserName": "",
    "Password": "",
    "From": ""
}
------------------------------------------


==6==
added three files to the project
------------------------------------------
Services\EmailSender.cs
Services\EmailSenderConfigure.cs
Services\EmailSenderSmtpOptions.cs
------------------------------------------

==7==
in the program.cs file add configuration as follows
------------------------------------------
builder.Services
    .AddEmailSenderConfig(builder.Configuration)
------------------------------------------


==8==
Modify the Areas\Identity\Pages\Account\RegisterConfirmation.cshtml.cs file as follows
------------------------------------------
            // <snippet_EmailSender>
            /*
            DisplayConfirmAccountLink = true;
            if (DisplayConfirmAccountLink)
            {
                var userId = await _userManager.GetUserIdAsync(user);
                var code = await _userManager.GenerateEmailConfirmationTokenAsync(user);
                code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
                EmailConfirmationUrl = Url.Page(
                    "/Account/ConfirmEmail",
                    pageHandler: null,
                    values: new { area = "Identity", userId = userId, code = code, returnUrl = returnUrl },
                    protocol: Request.Scheme);
            }
            */
            // </snippet_EmailSender>
------------------------------------------



